# 多環境支援　multi-env support
# 預設支援　dev

# H2 Database
# 在 Spring Boot 啟用控制台，使用者可透過 Web 介面來訪問 H2 的控制台
spring.h2.console.enabled=true
# H2 控制台的 URL 地址; EX: http://localhost:8080/coindesk/h2-console
spring.h2.console.path=/h2-console
# H2 設定是否輸出 Trace log
spring.h2.console.settings.trace=false
# H2 設定是否可遠瑞登入 web console
spring.h2.console.settings.web-allow-others=true

# Datasource
# 配置 H2 的 JDBC Driver
spring.datasource.driverClassName=org.h2.Driver
# 配置 H2 的 DB 地址
spring.datasource.url=jdbc:h2:mem:testdb
# 配置 H2 的 DB username
spring.datasource.username=sa
# 配置 H2 的 DB password
spring.datasource.password=abcd1234

# 資料庫型別宣告
spring.jpa.database = H2
# 使用的資料庫平台
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# 是否開啟查詢語句在控制檯列印
spring.jpa.show-sql = true
# 如果要使用 dtat.sql 填充 Hibernate 創建的模式，請將下列設定為 true
spring.jpa.defer-datasource-initialization=true
# generate-ddl 是否透過 entity 產生 db schema
spring.jpa.generate-ddl= false
# Hibernate ddl auto (create, create-drop, update)
# 指的是服務起來時要用何種方式執行ddl指令, 有create, update, create-drop 等形式。
# create: 啟動時建立Table, 下次啟動會覆蓋上次的, 故會造成資料遺失
# update: 若無Table則啟動時建立, 若有則視有無變更自動Update
# create-drop:啟動時建立Table, 當次Session關閉則刪除
spring.jpa.hibernate.ddl-auto=update
# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# 進行該配置後，每次啟動程式，程式都會執行resources/db/schema.sql檔案，對資料庫的結構進行操作，相當於新建一個表。
spring.sql.init.schema-locations=classpath:db/schema.sql
# 進行該配置後，每次啟動程式，程式都會執行resources/db/data.sql檔案，對資料庫的資料操作，相當於往表中插入資料。
spring.sql.init.data-locations=classpath:db/import.sql
# Spring Boot 預設只對 embedded 資料庫初始資料，如果要對一般資料庫，則 application.properties 要設定
spring.sql.init.platform=always